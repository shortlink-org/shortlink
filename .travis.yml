services:
  - docker

# Only clone the most recent commit.
git:
  submodules: false
  depth: 1

# Don't email me the results of the test runs.
notifications:
  email: false

matrix:
  include:
    - name: backend
      language: go
      before_install:
        - make dep

      # Force-enable Go modules. Also force go to use the code in vendor/
      # These will both be unnecessary when Go 1.14 lands.
      #env: GO111MODULE=on GOFLAGS='-mod vendor'

      # You don't need to test on very old versions of the Go compiler. It's the user's
      # responsibility to keep their compiler up to date.
      go:
        - 1.13.x

      #go_import_path:

      # Skip the install step. Don't `go get` dependencies. Only build with the code
      # in vendor/
      install: true

      cache:
        directories:
          - $GOPATH/pkg/mod

      stages:
        - test
        - deploy

      jobs:
        include:
          - name: golint
            stage: test
            os: linux
            # script always runs to completion (set +e). If we have linter issues AND a
            # failing test, we want to see both. Configure golangci-lint with a
            # .golangci.yml file at the top level of your repo.
            before_install:
              # binary will be $(go env GOPATH)/bin/golangci-lint
              - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.26.0
            script:
              - make golint
          - name: gosec
            stage: test
            os: linux
            before_install:
              - go get github.com/securego/gosec/cmd/gosec
            script:
              - make gosec
          - name: test
            stage: test
            os: linux
            script:
              - make test
            after_success:
              - bash <(curl -s https://codecov.io/bash)

      deploy:
        - provider: script
          script: make CI_COMMIT_TAG=$TRAVIS_TAG docker
          on:
            tags: true

    - name: frontend
      language: node_js

      node_js:
        - v13.6.0

      cache:
        directories:
          - "node_modules"

      install:
        - npm install -g surge

      script:
        - make nuxt_generate

      deploy:
        - provider: surge
          project: ./pkg/ui/nuxt/dist
          domain: shortlink.surge.sh
          on:
            all_branches: true
