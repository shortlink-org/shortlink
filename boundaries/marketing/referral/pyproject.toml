[project]
name = "referral"
description = "This service is responsible for the referral program."
readme = "README.md"
requires-python = ">=3.12"
dynamic = ["version"]

dependencies = [
#  Main dependencies
    "dependency-injector @ git+https://github.com/shortlink-org/python-dependency-injector@master",
    "uvicorn",
    "redis",
    "protobuf",
    "loguru",
    "quart",
    "sqlalchemy",
    "python-dotenv",
    "hypercorn",
    "setuptools>=69.5.1", # not directly required, pinned by Snyk to avoid a vulnerability
# Opentelemetry dependencies
    "pyroscope-io==0.8.7",
    "opentelemetry-api==1.24.0",
    "opentelemetry-sdk",
    "opentelemetry-exporter-prometheus",
    'opentelemetry-exporter-otlp==1.24.0',
    'opentelemetry-exporter-otlp-proto-common==1.24.0',
    'opentelemetry-exporter-otlp-proto-grpc==1.24.0',
    'opentelemetry-exporter-otlp-proto-http==1.24.0',
    "opentelemetry-instrumentation-redis",
    "opentelemetry-instrumentation-sqlalchemy",
# For testing dependencies
    "pytest",
    "allure-pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-factoryboy",
    "httpx",
    "testcontainers",
# For code quality dependencies
    "ruff>=0.4.4",
# For profiling dependencies
    "scalene",
    "werkzeug>=3.0.3" # not directly required, pinned by Snyk to avoid a vulnerability
]

[build-system]
requires = ["setuptools~=69.5"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "src._version.__version__"}

[tool.setuptools.package-data]
"src" = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-ra -q --cov-report term-missing --cov libname --fixtures tests"

[tool.ruff]
unsafe-fixes = true
line-length = 120
extend-exclude = [
  "src/domain/referral/v1/*.pyi",
  "src/domain/referral/v1/*_pb2.py",
  "src/domain/referral/v1/*_pb2_grpc.py",
  "tests/*",
]
exclude = [".venv", "*_pb2.py", "*_pb2_grpc.py", "*_pb2.pyi"]

[tool.ruff.lint]
select = [
  # TODO: enable all checks
  #  "ALL",
  "E", "W", # pycodestyle
  "F",      # pyflakes
  "UP",     # pyupgrade
  "D",      # pydocstyle
  "N",      # pylint
  "PL",     # pylint
  "RUF",    # ruff
  "TID",    # tidy
  "I",      # isort
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = ["src"]

[tool.ruff.lint.pydocstyle]
convention = "google"
