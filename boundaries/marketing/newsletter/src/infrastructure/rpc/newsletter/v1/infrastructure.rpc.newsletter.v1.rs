// @generated
// This file is @generated by prost-build.
/// Newsletter
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Newsletter {
    /// Field mask to be used for update operations.
    #[prost(message, optional, tag="3")]
    pub field_mask: ::core::option::Option<::prost_types::FieldMask>,
    /// The unique identifier of the newsletter.
    #[prost(string, tag="1")]
    pub email: ::prost::alloc::string::String,
    /// Status of the newsletter.
    #[prost(bool, tag="2")]
    pub active: bool,
}
/// NewsletterList
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Newsletters {
    /// List of newsletters.
    #[prost(message, repeated, tag="1")]
    pub list: ::prost::alloc::vec::Vec<Newsletter>,
}
/// GetResponse is the response message containing the newsletter.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetResponse {
}
/// SubscribeRequest is the request message containing the user id.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SubscribeRequest {
}
/// SubscribeResponse is the response message containing the user id.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SubscribeResponse {
}
/// UnSubscribeRequest is the request message containing the user id.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UnSubscribeRequest {
}
/// UnSubscribeResponse is the response message containing the user id.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UnSubscribeResponse {
}
include!("infrastructure.rpc.newsletter.v1.tonic.rs");
// @@protoc_insertion_point(module)