syntax = "proto3";

// buf:lint:ignore
package server.v1;

option go_package = "github.com/shortlink-org/shortlink/boundaries/api/api-gateway/gateways/grpc-web/infrastructure/server/v1";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Link
message Link {
  // Field mask
  google.protobuf.FieldMask field_mask = 6;

  // URL
  string url = 1;
  // Hash by URL + salt
  string hash = 2;
  // Describe of link
  string describe = 3;

  // Create at
  google.protobuf.Timestamp created_at = 4;
  // Update at
  google.protobuf.Timestamp updated_at = 5;
}

// Link list
message Links {
  // Links
  repeated Link link = 1;
}

// LinkService is the service that provides link methods.
service LinkService {
  // GetLinks returns a list of links.
  rpc GetLinks(GetLinksRequest) returns (GetLinksResponse) {
    option(google.api.http) = {
      get: "/api/grpc/links"
    };
  };

  // GetLink returns a link.
  rpc GetLink(GetLinkRequest) returns (GetLinkResponse) {
    option(google.api.http) = {
      get: "/api/grpc/link/{link.hash}"
    };
  };

  // CreateLink creates a link.
  rpc CreateLink(CreateLinkRequest) returns (CreateLinkResponse) {
    option(google.api.http) = {
      post: "/api/grpc"
      body: "*"
    };
  };

  // DeleteLink deletes a link.
  rpc DeleteLink(DeleteLinkRequest) returns (google.protobuf.Empty) {
    option(google.api.http) = {
      delete: "/api/grpc/{link.hash}"
    };
  };
}

// GetLinksRequest is the request message for GetLinks.
message GetLinksRequest {
  // Link hash
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];

  // Link filter
  string filter = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter by link"
  }];
}

// GetLinksResponse is the response message for GetLinks.
message GetLinksResponse {
  // Links
  repeated Link links = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Links"
  }];
}

// GetLinkRequest is the request message for GetLink.
message GetLinkRequest {
  // Link hash
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// GetLinkResponse is the response message for GetLink.
message GetLinkResponse {
  // Link
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// CreateLinkRequest is the request message for CreateLink.
message CreateLinkRequest {
  // Link
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// CreateLinkResponse is the response message for CreateLink.
message CreateLinkResponse {
  // Link
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// DeleteLinkRequest is the request message for DeleteLink.
message DeleteLinkRequest {
  // Link hash
  Link link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "{\"hash\": \"1234567890\"}",
      description: "Link hash"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}
