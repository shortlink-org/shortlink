# -*- mode: ruby -*-
# vi: set ft=ruby :

# This guide is optimized for Vagrant 1.7 and above.
# Although versions 1.6.x should behave very similarly, it is recommended
# to upgrade instead of disabling the requirement below.
Vagrant.require_version ">= 1.7.0"

def getIP(num)
  return "10.0.7.#{num+100}"
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Enable plugins =====================================================================================================
  config.env.enable # https://github.com/gosuri/vagrant-env
  config.env.load './ops/vagrant/.env' # path from root-directory

  # ENV ========================================================================
  # Defaults for config options defined in CONFIG
  $num_instances = ENV['NUM_INSTANCES'].to_i

  $instance_name_prefix = ENV['INSTANCE_NAME_PREFIX']

  $vm_gui             = ENV['VM_GUI'].to_s == "true"
  $vm_memory          = ENV['VM_MEMORY'].to_i
  $vm_cpus            = ENV['VM_CPUS'].to_i
  $vb_cpuexecutioncap = ENV['VB_CPUEXECUTIONCAP'].to_i

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # RUN VM =============================================================================================================
  (1..$num_instances).each do |i|
    config.vm.define vm_name = "%s-%02d" % [$instance_name_prefix, i] do |config|

    # Common settin machine ============================================================================================
    config.vm.hostname = vm_name

    config.vm.provider :virtualbox do |v|
      v.gui = $vm_gui
      v.memory = $vm_memory
      v.cpus = $vm_cpus
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "#{$vb_cpuexecutioncap}"]
    end

    # NETWORK ==========================================================================================================
    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # NOTE: This will enable public access to the opened port
    config.vm.network "forwarded_port", guest: 80, host: "#{i+8080}"
    config.vm.network "forwarded_port", guest: 443, host: "#{i+8443}"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network :private_network, ip: getIP(i)

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network "public_network"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # config.vm.synced_folder "../data", "/vagrant_data"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    # config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    #   vb.gui = true
    #
    #   # Customize the amount of memory on the VM:
    #   vb.memory = "1024"
    # end

    # config.vm.provider "docker" do |d|
    #   d.image = "ubuntu:20.04"
    # end

    # Enable provisioning with a shell script. Additional provisioners such as
    # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install --no-install-recommends -y python3-pip
    SHELL

    # View the documentation for the provider you are using for more
    # information on available options.
    end
  end

  # SSH ================================================================================================================
  # Disable the new default behavior introduced in Vagrant 1.7, to
  # ensure that all Vagrant machines will use the same SSH key pair.
  # See https://github.com/mitchellh/vagrant/issues/5005
  config.ssh.insert_key = false
end
