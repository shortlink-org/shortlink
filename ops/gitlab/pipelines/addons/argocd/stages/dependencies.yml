include:
  - local: ops/gitlab/pipelines/addons/argocd/templates/crd.yml

# CRD templates for ArgoCD
prometheus-operator:crd:
  extends: .crd_templates
  parallel:
    matrix:
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
        APPLYSET: alertmanagerconfigs
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
        APPLYSET: alertmanagers
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
        APPLYSET: podmonitors
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
        APPLYSET: probes
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheusagents.yaml
        APPLYSET: prometheusagents
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
        APPLYSET: prometheuses
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
        APPLYSET: prometheusrules
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml
        APPLYSET: scrapeconfigs
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
        APPLYSET: servicemonitors
      - NAME: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.65.1/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
        APPLYSET: thanosrulers
  retry: 2
  environment:
    name: ${PROVIDER}/prometheus-operator-crd
    deployment_tier: production
    url: $ENVIRONMENT_URL
    kubernetes:
      namespace: default

# CRD templates for ArgoCD
istio:crd:
  extends: .crd_templates
  variables:
    NAME: https://raw.githubusercontent.com/istio/istio/master/manifests/charts/base/crds/crd-all.gen.yaml
    APPLYSET: istio
  environment:
    name: ${PROVIDER}/istio-crd
    deployment_tier: production
    url: $ENVIRONMENT_URL
    kubernetes:
      namespace: default

# Set secret credential
dockerfile:
  stage: .pre
  services:
    - name: docker:dind
      command: [ "--experimental" ]
  image: docker:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add curl
  script:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - ./kubectl create secret generic regcred
      --context=shortlink-org/shortlink:${PROVIDER}
      --from-file=.dockerconfigjson=/root/.docker/config.json
      --type=kubernetes.io/dockerconfigjson
  allow_failure: true
  rules:
    - when: manual
