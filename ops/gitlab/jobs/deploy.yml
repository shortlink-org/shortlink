# STAGING RELEASE ======================================================================================================
api:
  extends:
    - .rules_release
  stage: deploy
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-api
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-api
    REGISTRY: ${CI_REGISTRY_IMAGE}/api
    HELM_ARG: '--set deploy.annotations.app\.gitlab\.com\/env=$PROVIDER --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/deploy.yml'
    strategy: depend
  needs:
    - docker:build
    - HELM

logger:
  extends:
    - .rules_release
  stage: deploy
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-logger
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-logger
    REGISTRY: ${CI_REGISTRY_IMAGE}/logger
    HELM_ARG: '--set serviceAccount.create=false --set deploy.annotations.app\.gitlab\.com\/env=$PROVIDER --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/deploy.yml'
    strategy: depend
  needs:
    - docker:build
    - HELM

ui:
  extends:
    - .rules_release
  stage: deploy
  variables:
    RELEASE_NAME: ${CI_PROJECT_NAME}-ui
    HELM_PATH: ops/Helm/${CI_PROJECT_NAME}-ui
    REGISTRY: ${CI_REGISTRY_IMAGE}/ui-nuxt
    HELM_ARG: '--set serviceAccount.create=false --set deploy.annotations.app\.gitlab\.com\/env=$PROVIDER --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/ui.yml'
    strategy: depend
  needs:
    - docker:build
    - HELM

ingress:
  extends:
    - .rules_release
  stage: deploy
  variables:
    RELEASE_NAME: ingress
    HELM_PATH: ops/Helm/ingress
    HELM_ARG: '--set serviceAccount.create=false --set deploy.annotations.app\.gitlab\.com\/env=$PROVIDER --set deploy.annotations.app\.gitlab\.com\/app=$CI_PROJECT_PATH_SLUG'
  trigger:
    include:
      - local: 'ops/gitlab/pipelines/deploy.yml'
    strategy: depend
  needs:
    - docker:build
    - HELM
