version: '2.4'

x-network: &network
  networks:
    - simple
  dns:
    - ${DNS_IP}
  dns_search: ${DNS_SEARCH}

services:

  postgres:
    <<: *network
    depends_on:
      - coredns
    image: postgres:15.4-alpine
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    init: true
    restart: on-failure
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: shortlink
      POSTGRES_DB: shortlink
      PGOPTIONS: "--search_path=shortlink"
    networks:
      simple:
        ipv4_address: ${DATABASE_IP}
    healthcheck:
      test: [ "CMD", "pg_isready", "--username=postgres", "--host=127.0.0.1", "--port=5432" ]
      interval: 2s
      timeout: 1m
      retries: 5
    volumes:
      - ./ops/docker-compose/database/postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./data/shortlink/store/postgres/data:/var/lib/postgresql/data
#    logging:
#      driver: fluent-bit
#      options:
#        tag: postgres

  pgbouncer:
    <<: *network
    depends_on:
      - coredns
      - postgres
    image: bitnami/pgbouncer:1.20.1
    restart: on-failure
    container_name: pgbouncer
    init: true
    ports:
      - 6432:6432
    environment:
      - POSTGRESQL_HOST=${DATABASE_IP}
      - POSTGRESQL_PASSWORD=shortlink
      - POSTGRESQL_DATABASE=shortlink
      - PGBOUNCER_DATABASE=shortlink
    extra_hosts:
      - "postgres:${DATABASE_IP}"
    volumes:
      - ./ops/docker-compose/database/postgres/pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini

  # Backup
  # Docs: https://github.com/wal-g/wal-g/blob/master/docs/PostgreSQL.md
  # Bitnami delete the image from docker hub
  # wal-g:
  #  <<: *network
  #  depends_on:
  #    - coredns
  #    - postgres
  #  image: docker.io/bitnami/wal-g:1.1.0
  #  container_name: wal-g
  #  init: true
  #  profiles:
  #    - postgres
  #  restart: on-failure
  #  user: root
  #  command: --walg-file-prefix=/tmp/backups --pghost=postgres --pguser=postgres --pgpassword=shortlink --pgdatabase=shortlink backup-push /var/lib/postgresql/data
  #  volumes:
  #    - /data/shortlink/store/postgres/data:/var/lib/postgresql/data
  #    - /data/shortlink/store/postgres/backups:/tmp/backups
