version: '2.4'

x-network: &network
  networks:
    - simple
  dns:
    - "10.5.0.2"
  dns_search: coredns

services:

  zookeeper:
    <<: *network
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      # Support ENV - https://github.com/confluentinc/cp-docker-images/blob/5.4-preview/debian/zookeeper/include/etc/confluent/docker/zookeeper.properties.template
      ZOOKEEPER_CLIENT_PORT: 2181 # the port at which the clients will connect
      ZOOKEEPER_TICK_TIME: 2000   # the number of milliseconds of each tick
      ZOOKEEPER_INIT_LIMIT: 10    # the number of ticks that the initial synchronization phase can take
      ZOOKEEPER_SYNC_LIMIT: 5     # the number of ticks that can pass between sending a request and getting an acknowledgement
    depends_on:
      - fluentd
      - coredns

  kafka-1: &kafka-1
    <<: *network
    image: confluentinc/cp-kafka:5.4.0
    restart: on-failure
    container_name: kafka_1
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
    depends_on:
      - zookeeper
      - fluentd
      - coredns
#    logging:
#      driver: fluentd
#      options:
#        tag: kafka

  kafka-2:
    <<: *kafka-1
    container_name: kafka_2
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9097,OUTSIDE://localhost:9095
      KAFKA_LISTENERS: INSIDE://:9097,OUTSIDE://:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
    ports:
      - '9095:9095'

  kafka-3:
    <<: *kafka-1
    container_name: kafka_3
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9099,OUTSIDE://localhost:9098
      KAFKA_LISTENERS: INSIDE://:9099,OUTSIDE://:9098
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
    ports:
      - '9098:9098'

  kafka-client:
    <<: *kafka-1
    hostname: kafka-client
    container_name: kafka-client
    ports:
      - "9092"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_ADVERTISED_LISTENERS: ignored
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka_1:9094 1 60 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic shortlink'"
    depends_on:
      - coredns
      - kafka-1
      - kafka-2
      - kafka-3

# TODO: How it work? ;-)
#  schema-registry:
#    <<: *network
#    image: confluentinc/cp-schema-registry:5.4.0
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - zookeeper
#      - kafka-1
#      - kafka-2
#      - kafka-3
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka_1:9092,kafka_2:9095'
