version: '2.4'

include:
  - ./ops/docker-compose/mq/zookeeper/zookeeper.yaml

x-network: &network
  networks:
    - simple
  dns:
    - ${DNS_IP}
  dns_search: ${DNS_SEARCH}

services:

  kafka_1: &kafka_1
    <<: *network
    depends_on:
      - zookeeper
      - coredns
    image: confluentinc/cp-kafka:7.5.3
    restart: on-failure
    container_name: kafka_1
    init: true
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
  #    logging:
  #      driver: fluent-bit
  #      options:
  #        tag: kafka

  kafka_2:
    <<: *kafka_1
    container_name: kafka_2
    init: true
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9097,OUTSIDE://localhost:9095
      KAFKA_LISTENERS: INSIDE://:9097,OUTSIDE://:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
    ports:
      - '9095:9095'

  kafka_3:
    <<: *kafka_1
    container_name: kafka_3
    init: true
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9099,OUTSIDE://localhost:9098
      KAFKA_LISTENERS: INSIDE://:9099,OUTSIDE://:9098
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"

      KAFKA_LOG_RETENTION_HOURS: 48
    ports:
      - '9098:9098'

  kafka-client:
    <<: *kafka_1
    depends_on:
      - coredns
      - kafka_1
      - kafka_2
      - kafka_3
    hostname: kafka-client
    container_name: kafka-client
    init: true
    ports:
      - "9092"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_ADVERTISED_LISTENERS: ignored
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka_1:9094 1 60 && \
                       kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic shortlink'"

