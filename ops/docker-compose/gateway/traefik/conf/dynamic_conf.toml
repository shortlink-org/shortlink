################################################################
# Middlewares
################################################################

[http.middlewares]
  # Latency Check
  [http.middlewares.latency-check.circuitBreaker]
    expression = "LatencyAtQuantileMS(50.0) > 100"

  [http.middlewares.test-compress.compress]
    excludedContentTypes = ["text/event-stream"]

  # Custom Error Page for 5XX
  [http.middlewares.test-errorpage.errors]
    status = ["500-599"]
    service = "serviceError"
    query = "/{status}.html"

  # 300 reqs/s
  [http.middlewares.test-ratelimit.rateLimit]
    average = 300

  # Retry to send request 4 times
  [http.middlewares.test-retry.retry]
    attempts = 4

################################################################
# TLS
################################################################
[tls.stores.default.defaultCertificate]
  certFile = "/cert/shortlink-peer.pem"
  keyFile = "/cert/shortlink-peer-key.pem"

################################################################
# link
################################################################
[http.routers.link]
  entryPoints = ["websecure"]
  rule = "PathPrefix(`/infrastructure.rpc.link.v1.LinkService/`) || PathPrefix(`/infrastructure.rpc.cqrs.link.v1.LinkCommandService/) || PathPrefix(/infrastructure.rpc.cqrs.link.v1.LinkQueryService/) || PathPrefix(/infrastructure.rpc.sitemap.v1.SitemapService/`)"
  service = "link"
  [http.routers.link.tls]
    certResolver = "default"
  [http.services.link.loadBalancer.healthCheck]
    scheme = "http"
    path = "/ready"
    interval = "10s"
    timeout = "3s"
    port = 9090

[[http.services.link.loadBalancer.servers]]
  url = "h2c://host.docker.internal:50053"

################################################################
# metadata
################################################################
[http.routers.metadata]
  entryPoints = ["websecure"]
  rule = "PathPrefix(`/infrastructure.rpc.metadata.v1.MetadataService/`)"
  service = "metadata"
  [http.routers.metadata.tls]
    certResolver = "default"
  [http.services.metadata.loadBalancer.healthCheck]
    scheme = "http"
    path = "/ready"
    interval = "10s"
    timeout = "3s"
    port = 9090

[[http.services.metadata.loadBalancer.servers]]
  url = "h2c://host.docker.internal:50052"

################################################################
# billing
################################################################
[http.routers.billing]
  entryPoints = ["websecure"]
  rule = "PathPrefix(`/infrastructure.api.rpc.payment.v1.PaymentService/) || PathPrefix(/infrastructure.api.rpc.order.v1.OrderService/) || PathPrefix(/infrastructure.api.rpc.tariff.v1.TariffService/`)"
  service = "billing"
  [http.routers.billing.tls]
    certResolver = "default"
  [http.services.billing.loadBalancer.healthCheck]
    scheme = "http"
    path = "/ready"
    interval = "10s"
    timeout = "3s"
    port = 9090

[[http.services.billing.loadBalancer.servers]]
  url = "h2c://host.docker.internal:50054"

################################################################
# Newsletter
################################################################
[http.routers.newsletter]
  rule = "PathPrefix(`/api/newsletter`)"
  service = "newsletter-shortlink@docker"
  [http.routers.newsletter.tls]
    certResolver = "default"

[[http.services.newsletter.loadBalancer.servers]]
  url = "http://host.docker.internal:8080"

################################################################
# UI
################################################################
[http.routers.ui]
  rule = "Host(`ui.local`)"
  service = "ui-next-shortlink@docker"
  [http.routers.ui.tls]
    certResolver = "default"

[[http.services.ui.loadBalancer.servers]]
  url = "http://ui-next"
