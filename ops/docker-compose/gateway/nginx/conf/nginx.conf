# One worker process per CPU core.
worker_processes auto; ## Default: 1

pid /tmp/nginx.pid;

worker_rlimit_nofile 8192; ## worker_connections * 2

events {
  worker_connections 2040;   ## Default: 1024
  use epoll;
  multi_accept on;
}

http {
  proxy_temp_path /tmp/proxy_temp;
  client_body_temp_path /tmp/client_temp;
  fastcgi_temp_path /tmp/fastcgi_temp;
  uwsgi_temp_path /tmp/uwsgi_temp;
  scgi_temp_path /tmp/scgi_temp;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_requests 1000;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  proxy_cache_path /tmp/nginx-cache keys_zone=cache:10m;

  map $upstream_response_time $temprt {
    default $upstream_response_time;
    ""      0;
  }

  log_format main '$proxy_add_x_forwarded_for - $remote_user [$time_local] '
                  '"$request" $status $bytes_sent '
                  '"$http_referer" "$http_user_agent" '
                  '"$gzip_ratio"';
  log_format json escape=json '{ "@timestamp": "$time_iso8601", '
                   '"remote_addr": "$remote_addr", '
                   '"body_bytes_sent": "$body_bytes_sent", '
                   '"status": $status, '
                   '"request": "$request", '
                   '"url": "$uri", '
                   '"request_method": "$request_method", '
                   '"response_time": $temprt, '
                   '"http_referrer": "$http_referer", '
                   '"http_user_agent": "$http_user_agent" }';

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log json;
  error_log /var/log/nginx/error.log warn;

  gzip on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable "msie6";

  include /etc/nginx/conf.d/*;
  include mime.types;
  types {
    # mjs is required for the new ES6 modules
    application/javascript js mjs;
  }
}
