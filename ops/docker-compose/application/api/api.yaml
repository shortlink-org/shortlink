x-network: &network
  depends_on:
    - coredns
  networks:
    - ${DOCKER_NETWORK}
  dns:
    - ${DNS_IP}
  dns_search: ${DNS_SEARCH}
  logging:
    driver: ${LOGGER_DRIVER}
    options:
      loki-url: ${LOGGER_DRIVER_URL}
      max-size: ${LOGGER_MAX_SIZE}

services:

  api:
    <<: *network
    build:
      context: .
      dockerfile: ops/dockerfile/go.Dockerfile
      args:
        CMD_PATH: "./boundaries/api/api-gateway/gateways/http-chi/cmd"
      shm_size: 1gb
      cache_from:
        - shortlink-api
    develop:
      watch:
        - action: rebuild
          path: ./boundaries/api/api-gateway
    image: shortlink-api
    container_name: api
    init: true
    ports:
      # API
      - "7080:7070"
      # Metrics
      - "9091:9090"
    restart: on-failure
    environment:
      GRPC_CLIENT_HOST: traefik
      GRPC_CLIENT_PORT: 443
      LOG_LEVEL: 4
      MQ_ENABLED: true
      MQ_KAFKA_URI: kafka-1:9092,kafka-2:9092
      TRACER_URI: jaeger-agent:6831
    labels:
      - "traefik.enable=true"
      - "traefik.port=7070"
      - "traefik.http.routers.whoami.entrypoints=api"
      - "traefik.http.routers.shortlink.rule=Host(`api.$DOCKER_DOMAIN`)"
      - "traefik.backend.healthcheck.path=/ready"
      - "traefik.backend.healthcheck.port=9090"
    volumes:
      - type: bind
        source: ./ops/cert
        target: /app/ops/cert
    user: ${CURRENT_UID}

  prometheus:
    <<: *network
    image: prom/prometheus:v2.52.0
    profiles:
      - prometheus
    volumes:
      - ./ops/docker-compose/application/api/config/api-server.json:/etc/prometheus/targets/api-server.json
