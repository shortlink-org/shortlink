version: '2.4'

x-network: &network
  networks:
    - simple
  dns:
    - ${DNS_IP}
  dns_search: ${DNS_SEARCH}

x-environment: &oncall-environment
  BASE_URL: host.docker.internal
  DATABASE_TYPE: sqlite3
  BROKER_TYPE: redis
  DOMAIN: http://localhost:8080
  SECRET_KEY: b3613a53-8e63-4c71-8fc6-349ced8d13dd
  REDIS_URI: redis://redis:6379/4
  DJANGO_SETTINGS_MODULE: settings.hobby
  CELERY_WORKER_QUEUE: "default,critical,long,slack,telegram,webhook,retry,celery"
  CELERY_WORKER_CONCURRENCY: "1"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "100"
  CELERY_WORKER_SHUTDOWN_INTERVAL: "65m"
  CELERY_WORKER_BEAT_ENABLED: "True"

services:

  oncall:
    <<: *network
    depends_on:
      coredns:
        condition: service_started
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    image: grafana/oncall:latest
    container_name: oncall
    init: true
    command: sh -c "uwsgi --ini uwsgi.ini"
    environment: *oncall-environment
    restart: on-failure
    volumes:
      - ./data/oncall:/var/lib/oncall

  oncall_db_migration:
    <<: *network
    depends_on:
      coredns:
        condition: service_started
      redis:
        condition: service_healthy
    image: grafana/oncall:latest
    container_name: oncall_db_migration
    init: true
    command: python manage.py migrate --noinput
    environment: *oncall-environment
    volumes:
      - ./data/oncall:/var/lib/oncall

  celery:
    <<: *network
    image: grafana/oncall:latest
    container_name: oncall_celery
    init: true
    restart: always
    command: sh -c "./celery_with_exporter.sh"
    environment: *oncall-environment
    volumes:
      - ./data/oncall:/var/lib/oncall
    depends_on:
      coredns:
        condition: service_started
      oncall_db_migration:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

