# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  create: true

# ==============================================================================
ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentelemetry: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /next/$2
    nginx.ingress.kubernetes.io/use-regex: "true"

  hostname: shortlink.best
  paths:
    - path: /next(/|$)(.*)
      service:
        name: shortlink-next
        port: 8080

# ==============================================================================
deploy:
  replicaCount: 1

  imagePullSecrets: []

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 15m
      memory: 64Mi

  # -- Annotations to be added to controller pods
  annotations: {}

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/ui-next
    tag: 0.17.0
    # -- Global imagePullPolicy
    # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: Always

  # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /
      port: 8080

  # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /
      port: 8080

  securityContext:
    readOnlyRootFilesystem: false

  volumes:
    - name: tmp
      mountPath: /tmp
      type: emptyDir

# ==============================================================================
# Service configuration
service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      public: true

# ==============================================================================
# Prometheus Operator ServiceMonitor configuration
monitoring:
  enabled: true

# ==============================================================================
# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
