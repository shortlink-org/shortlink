{{/* vim: set filetype=mustache: */}}

{{- define "shortlink-common.deploymentStrategy" -}}
strategy:
{{- if .Values.deploy.strategy }}
  {{- if eq .Values.deploy.strategy.type "BlueGreen" }}
  blueGreen:
    activeService: {{ include "helpers.fullname" . }}
    previewService: {{ include "helpers.fullname" . }}-preview
    autoPromotionEnabled: false
  {{- else if eq .Values.deploy.strategy.type "Canary" }}
  canary:
    stableService: {{ include "helpers.fullname" . }}
    canaryService: {{ include "helpers.fullname" . }}-preview
    # The minimum number of pods that will be requested for each ReplicaSet
    # when using traffic routed canary. This is to ensure high availability
    # of each ReplicaSet.
    minPodsPerReplicaSet: {{ .Values.deploy.strategy.minPodsPerReplicaSet | default 1 }}
    {{- if eq .Values.ingress.enabled true }}
    dynamicStableScale: {{ ne .Values.deploy.strategy.canary.dynamicStableScale false }}
    {{- end }}
    trafficRouting:
    {{- if eq .Values.ingress.enabled true }}
      {{- if eq .Values.ingress.ingressClassName "nginx" }}
      nginx:
        # Reference to an Ingress which has a rule pointing to the stable service (e.g. rollouts-demo-stable)
        # This ingress will be cloned with a new name, in order to achieve NGINX traffic splitting.
        stableIngress: {{ include "helpers.fullname" . }}
      {{- end }}
    {{- end }}
    {{- toYaml .Values.deploy.strategy.canary | nindent 4 }}
    {{- end }}
{{- else }}
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
{{- end }}
{{- end }}
