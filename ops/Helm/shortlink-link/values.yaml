# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  create: true

# ==============================================================================
# This secret for dev-stand. For production use CI-variables
secret:
  enabled: false
  grpcServerCert: |
    -----BEGIN CERTIFICATE-----
    Your cert...
    -----END CERTIFICATE-----
  grpcServerKey: |
    -----BEGIN EC PRIVATE KEY-----
    Your key...
    -----END EC PRIVATE KEY-----
  grpcIntermediateCA: |
    -----BEGIN CERTIFICATE-----
    Your CA...
    -----END CERTIFICATE-----

# ==============================================================================
ingress:
  enabled: true
  # type ingress-controller: istio
  type: istio
  istio:
    match:
      - uri:
          prefix: /infrastructure.rpc.link.v1.LinkService/
    route:
      destination:
        port: 50051

# ==============================================================================
deploy:
  # type: Deployment, Rollout, StatefulSet
  type: Deployment

  resources:
    # -- We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 32Mi

  env:
    MQ_ENABLED: true
    MQ_TYPE: kafka
    MQ_KAFKA_URI: shortlink-kafka-bootstrap.kafka:9092
    TRACER_URI: http://grafana-tempo.grafana:14268/api/traces
    GRPC_CLIENT_HOST: istio-ingress.istio-ingress

    # -- Default store config
    STORE_TYPE: postgres
    STORE_REDIS_URI: shortlink-redis-master.redis:6379

  envSecret:
    - name: STORE_POSTGRES_URI
      secretKeyRef:
        name: shortlink-postgres-pguser-link
        key: uri

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/link
    tag: 0.16.25

  # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /live
      port: 9090

  # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /ready
      port: 9090

service:
  type: ClusterIP
  ports:
    - name: grpc
      port: 50051
      protocol: TCP
      public: true
    - name: metrics
      port: 9090
      protocol: TCP
      public: true

# ==============================================================================
# Prometheus Operator ServiceMonitor configuration
monitoring:
  enabled: true

# ==============================================================================
# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
