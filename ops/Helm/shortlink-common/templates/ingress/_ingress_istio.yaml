{{/* vim: set filetype=mustache: */}}

{{- define "shortlink-common.istioIngress" }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ empty .Values.ingress.name | ternary (include "helpers.fullname" .) .Values.ingress.name }}
  labels:
    {{- include "helpers.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.ingress.spec }}
    {{- toYaml . | nindent 2 }}
  {{- end }}
  hosts:
    - "*"
  gateways:
    # prefer the <namespace>/<name> format
    - istio-ingress/istio-ingress
  http:
    - match:
        {{- toYaml .Values.ingress.istio.match | nindent 8 }}
      route:
        - destination:
            host: {{ include "helpers.fullname" . }}
            port:
              number: {{ .Values.ingress.istio.route.destination.port | default 50051 }}
      retries:
        attempts: 3
        perTryTimeout: 2s
        retryOn: "gateway-error,connect-failure,refused-stream,503"
      timeout: 10s


{{- if and false }}
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  {{- include "shortlink-common.metadata" . | indent 2 }}
spec:
  host: {{ .name | default (include "helpers.fullname" .) }}.{{ .Release.Namespace }}.svc.cluster.local
  {{- with .Values.ingress.istio.destinationRule }}
    {{- toYaml . | nindent 2 }}
  {{- end }}
  trafficPolicy:
    connectionPool:
      tcp:
        connectTimeout: 100ms
        maxConnections: 1000
      http:
        http1MaxPendingRequests: 1000
        http2MaxRequests: 1000
        maxRequestsPerConnection: 20
        maxRetries: 3
    outlierDetection:
      consecutive5xxErrors: 7
      interval: 10s
      baseEjectionTime: 3m
      maxEjectionPercent: 100
      minHealthPercent: 50
{{- end }}
{{- end }}
