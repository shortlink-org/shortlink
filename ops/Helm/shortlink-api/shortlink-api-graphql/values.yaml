# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the `helpers.fullname` template
  # name: shortlink

ingress:
  enabled: true
  type: nginx
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentelemetry: "true"

  hostname: shortlink.best
  path: /graphql(/|$)(.*)
  service:
    name: shortlink-api-graphql
    port: 7070

  # istio:
  #  match:
  #    - uri:
  #        prefix: /api
  #  route:
  #    destination:
  #      port: 7070

# ==============================================================================
deploy:
  type: Rollout

  replicaCount: 1

  strategy:
    type: Canary
    canary:
      steps:
        - setWeight: 100

  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 15m
      memory: 64Mi

  env:
    MQ_ENABLED: false
    MQ_TYPE: "kafka"
    TRACER_URI: grafana-tempo.grafana:4317
    GRPC_CLIENT_HOST: istio-ingress.istio-ingress.svc.cluster.local
    AUTH_URI: https://shortlink.best/api/auth
    SPICE_DB_API: shortlink.spicedb-operator:50051

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/api-graphql
    tag: 0.16.80
    # -- Global imagePullPolicy
    # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

  # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /live
      port: 9090

  # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /ready
      port: 9090

hpa:
  enabled: false
  metrics:
    - type: ContainerResource
      containerResource:
        name: cpu
        container: application
        target:
          type: Utilization
          averageUtilization: 80

NetworkPolicy:
  enabled: false

service:
  type: ClusterIP
  ports:
    - name: http
      port: 7070
      protocol: TCP
      public: true
    - name: metrics
      port: 9090
      protocol: TCP

# ==============================================================================
# Prometheus Operator ServiceMonitor configuration
monitoring:
  enabled: true

# ==============================================================================
# PodDisruptionBudget
podDisruptionBudget:
  enabled: false
