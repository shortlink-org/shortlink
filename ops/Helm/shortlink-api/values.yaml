# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# -- Add labels to all the deployed resources
commonLabels: {}

# -- Add annotations to all the deployed resources
commonAnnotations: {}

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the `helpers.fullname` template
  # name: shortlink

  # -- Annotations for service account. Evaluated as a template.
  # Only used if `create` is `true`.
  annotations: {}

  # -- Auto-mount the service account token in the pod
  automountServiceAccountToken: false

ingress:
  enabled: true
  type: nginx
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentracing: "true"
    kubernetes.io/tls-acme: "true"

  hostname: shortlink.best
  path: /api/?(.*)
  service:
    name: shortlink-api
    port: 7070

  istio:
    match:
      - uri:
          prefix: /api
    route:
      destination:
        port: 7070

# ==============================================================================
# This secret for dev-stand. For production use CI-variables
secret:
  enabled: false
  grpcServerCert: |
    -----BEGIN CERTIFICATE-----
    Your cert...
    -----END CERTIFICATE-----
  grpcServerKey: |
    -----BEGIN EC PRIVATE KEY-----
    Your key...
    -----END EC PRIVATE KEY-----
  grpcIntermediateCA: |
    -----BEGIN CERTIFICATE-----
    Your CA...
    -----END CERTIFICATE-----

# ==============================================================================
deploy:
  type: Rollout

  replicaCount: 3

  strategy:
    type: Canary
    canary:
      steps:
        - setWeight: 30
        - pause:
            duration: 10
        - setWeight: 60
        - pause:
            duration: 10
        - setWeight: 80
        - pause:
            duration: 10

  resources:
    limits: {}
    requests: {}

  env:
    MQ_ENABLED: "false"
    MQ_TYPE: "rabbitmq"
    TRACER_URI: grafana-tempo.grafana:6831
    GRPC_CLIENT_HOST: istio-ingress.istio-ingress.svc.cluster.local

    # -- Default store config
    STORE_POSTGRES_URI: postgres://postgres:shortlink@postgresql.postgresql:5432/shortlink?sslmode=disable

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/api
    tag: 0.13.68
    # -- Global imagePullPolicy
    # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

hpa:
  enabled: true
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

NetworkPolicy:
  enabled: false

service:
  type: ClusterIP
  ports:
    - name: http
      port: 7070
      protocol: TCP
      public: true
    - name: metrics
      port: 9090
      protocol: TCP

# Prometheus Operator ServiceMonitor configuration
monitoring:
  # -- Creates a Prometheus Operator ServiceMonitor
  enabled: true
  # -- Additional labels that can be used so PodMonitor will be discovered by Prometheus
  labels:
    release: prometheus-operator
  # -- The label to use to retrieve the job name from.
  jobLabel: ""

# -- If you want to use an external database
external_database:
  enable: false
  ip: 192.168.0.101
  port: 6379
