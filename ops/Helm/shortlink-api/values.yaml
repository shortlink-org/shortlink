# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

host: shortlink.best

# -- Add labels to all the deployed resources
commonLabels: {}

# -- Add annotations to all the deployed resources
commonAnnotations: {}

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the `helpers.fullname` template
  name: shortlink

  # -- Annotations for service account. Evaluated as a template.
  # Only used if `create` is `true`.
  annotations: {}

  # -- Auto-mount the service account token in the pod
  automountServiceAccountToken: false

ingress:
  enabled: true
  type: nginx
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentracing: "true"
    kubernetes.io/tls-acme: "true"

  hostname: shortlink.best
  path: /api/?(.*)
  service:
    name: shortlink-api
    port: 7070

# ==============================================================================
# This secret for dev-stand. For production use CI-variables
secret:
  enabled: false
  grpcServerCert: |
    -----BEGIN CERTIFICATE-----
    Your cert...
    -----END CERTIFICATE-----
  grpcServerKey: |
    -----BEGIN EC PRIVATE KEY-----
    Your key...
    -----END EC PRIVATE KEY-----
  grpcIntermediateCA: |
    -----BEGIN CERTIFICATE-----
    Your CA...
    -----END CERTIFICATE-----

# ==============================================================================
deploy:
  replicaCount: 1

  env:
    MQ_ENABLED: "false"
    MQ_TYPE: "rabbitmq"
    MQ_RABBIT_URI: "amqp://admin:admin@shortlink.rabbitmq:5672"
    TRACER_URI: grafana-tempo.grafana:6831
    GRPC_CLIENT_HOST: istio-ingress.istio-ingress.svc.cluster.local

    # -- Default store config
    STORE_POSTGRES_URI: postgres://postgres:shortlink@postgresql.postgresql:5432/shortlink?sslmode=disable

  imagePullSecrets: []

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  terminationGracePeriodSeconds: 90

  # -- Annotations to be added to controller pods
  annotations: {}

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/api
    tag: 0.13.5
    # -- Global imagePullPolicy
    # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

  # -- Node labels and tolerations for pod assignment
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: []

  tolerations: []

  affinity: []

  # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /live
      port: 9090
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 1

  # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /ready
      port: 9090
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 30

  resources:
    # -- We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 32Mi

  podSecurityContext:
    # -- fsGroup is the group ID associated with the container
    fsGroup: 1000

  # -- Security Context policies for controller pods
  # See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
  # notes on enabling and using sysctls
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    # runAsUser is the user ID used to run the container
    runAsUser: 1000
    # runAsGroup is the primary group ID used to run all processes within any container of the pod
    runAsGroup: 1000
    # readOnlyRootFilesystem is a flag to enable readOnlyRootFilesystem for the Hazelcast security context
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

NetworkPolicy:
  enabled: false

service:
  type: ClusterIP
  port: 7070
  # nodePort: 7070
  # clusterIP: 172.0.0.1

# Prometheus Operator ServiceMonitor configuration
monitoring:
  # -- Creates a Prometheus Operator ServiceMonitor
  enabled: true
  # -- Additional labels that can be used so PodMonitor will be discovered by Prometheus
  labels:
    release: prometheus-operator
  # -- The label to use to retrieve the job name from.
  jobLabel: ""

# -- If you want to use an external database
external_database:
  enable: false
  ip: 192.168.0.101
  port: 6379

# Kratos ===============================================================================================================
kratos:
  enabled: true

  fullnameOverride: kratos

  ingress:
    admin:
      enabled: false
      className: nginx
    public:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: cert-manager-production
        nginx.ingress.kubernetes.io/enable-modsecurity: "true"
        nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
        nginx.ingress.kubernetes.io/enable-opentracing: "true"
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts:
        - host: shortlink.best
          paths:
            - path: /api/auth\/(.*)
              pathType: Prefix
      tls:
        - secretName: shortlink-ingress-tls
          hosts:
            - shortlink.best

  kratos:
    config:
      dsn: memory

      identity:
        default_schema_id: default
        schemas:
          - id: default
            url: file:///etc/config/identity.default.schema.json

      serve:
        public:
          # Kratos uses cookies so you must always connect from "127.0.0.1"
          base_url: https://shortlink.best/api/auth
          cors:
            enabled: true
            debug: true
            allowed_origins:
              - "http://127.0.0.1:3000"
              - "https://shortlink.best"
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Authorization
              - Cookie
              - Content-Type
              - Set-Cookie
            allow_credentials: true
        admin:
          base_url: http://127.0.0.1:4434/

      session:
        # 30 days
        lifespan: 720h
        cookie:
          domain: https://shortlink.best
          same_site: Lax

      selfservice:
        default_browser_return_url: https://shortlink.best
        allowed_return_urls:
          - "*"
          - http://*
          - https://*

        methods:
          password:
            enabled: true
          profile:
            enabled: true
          link:
            enabled: true
          oidc:
            enabled: true
            config:
              providers:
                # this is `<provider-id>` in the Authorization callback URL. DO NOT CHANGE IT ONCE SET!
                - id: github
                  provider: github
                  # Replace this with the OAuth2 Client ID provided by GitHub
                  client_id: ....
                  # Replace this with the OAuth2 Client Secret provided by GitHub
                  client_secret: ....
                  mapper_url: file:///etc/config/kratos/oidc.github.jsonnet
                  scope:
                    - user:email
                 # this is `<provider-id>` in the Authorization callback URL. DO NOT CHANGE IT ONCE SET!
                - id: gitlab
                  provider: gitlab
                  # Replace this with the OAuth2 Client ID provided by GitLab
                  client_id: ....
                  # Replace this with the OAuth2 Client Secret provided by GitLab
                  client_secret: ....
                  mapper_url: file:///etc/config/kratos/oidc.gitlab.jsonnet
                  scope:
                    - read_user
                    - openid
                    - profile
                    - email

        # These `ui_url` values are entirely dependant upon your setup.
        # For this example, the React-app runs in development mode on the default port of 3000.
        # You can see how this would change for a production environment or other solutions.
        flows:
          error:
            ui_url: https://shortlink.best/next/error

          settings:
            ui_url: https://shortlink.best/next/user/profile
            # Sessions older than a minute requires the user to sign in again before
            # the password is changed.
            privileged_session_max_age: 15m

          recovery:
            enabled: true
            ui_url: https://shortlink.best/next/auth/recovery

          verification:
            enabled: true
            ui_url: https://shortlink.best/next/auth/verify
            after:
              default_browser_return_url: https://shortlink.best/next

          logout:
            after:
              default_browser_return_url: https://shortlink.best/next/auth/login

          login:
            ui_url: https://shortlink.best/next
            lifespan: 10m

          registration:
            lifespan: 10m
            ui_url: https://shortlink.best/next/auth/registration
            after:
              password:
                hooks:
                  - hook: session
              oidc:
                hooks:
                  - hook: session

      log:
        level: info
        format: json
        leak_sensitive_values: true

      secrets:
        cookie:
          # This is an example; secret must be this length (32 chars).
          - PLEASE-CHANGE-ME-I-AM-VERY-INSECURE

      hashers:
        argon2:
          parallelism: 1
          memory: 128MB
          iterations: 2
          salt_length: 16
          key_length: 16

      courier:
        smtp:
          connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
          from_address: no-reply@shortlink.com

    development: true

    # -- Enables database migration
    automigration:
      enabled: true
      # -- Configure the way to execute database migration. Possible values: job, initContainer
      # When set to job, the migration will be executed as a job on release or upgrade.
      # When set to initContainer, the migration will be executed when kratos pod is created
      # Defaults to job
      type: job

    # -- Parameters for the Prometheus ServiceMonitor objects.
    # Reference: https://docs.openshift.com/container-platform/4.6/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
    serviceMonitor:
      # -- switch to false to prevent creating the ServiceMonitor
      enabled: true

    #  You can add multiple identity schemas here
    identitySchemas:
      "identity.default.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "minLength": 3,
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    },
                    "verification": {
                      "via": "email"
                    },
                    "recovery": {
                      "via": "email"
                    }
                  }
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "first": {
                      "title": "First Name",
                      "type": "string"
                    },
                    "last": {
                      "title": "Last Name",
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "email"
              ],
              "additionalProperties": false
            }
          }
        }
