# Common default values for shortlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# -- Add labels to all the deployed resources
commonLabels: {}

# -- Add annotations to all the deployed resources
commonAnnotations: {}

# -- Pods Service Account
# @ignored ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true

  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the `helpers.fullname` template
  # name: shortlink

  # -- Annotations for service account. Evaluated as a template.
  # Only used if `create` is `true`.
  annotations: {}

  # -- Auto-mount the service account token in the pod
  automountServiceAccountToken: false

# ==============================================================================
enabled: true

ingress:
  enabled: false
  type: nginx
  annotations:
    cert-manager.io/cluster-issuer: cert-manager-production
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/enable-opentracing: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /s/$2
    nginx.ingress.kubernetes.io/use-regex: "true"

  hostname: shortlink.best
  path: /s(/|$)(.*)
  service:
    name: shortlink-proxy
    port: 3020

# ==============================================================================
deploy:
  replicaCount: 1

  env:
    MQ_ENABLED: "false"
    MQ_TYPE: "rabbitmq"
    MQ_RABBIT_URI: "amqp://admin:admin@shortlink.rabbitmq:5672"
    TRACER_URI: grafana-tempo.grafana:6831
    API_LINK_SERVICE: http://shortlink-api.shortlink:7070
    GRPC_CLIENT_HOST: istio-ingress.istio-ingress

    # -- Default store config
    STORE_POSTGRES_URI: postgres://postgres:shortlink@postgresql.postgresql:5432/shortlink?sslmode=disable

  imagePullSecrets: []

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  terminationGracePeriodSeconds: 90

  # -- Annotations to be added to controller pods
  annotations: {}

  image:
    repository: registry.gitlab.com/shortlink-org/shortlink/proxy
    tag: 0.13.65
    # -- Global imagePullPolicy
    # Default: 'Always' if image tag is 'latest', else 'IfNotPresent'
    # Ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    pullPolicy: IfNotPresent

  # -- Node labels and tolerations for pod assignment
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
  nodeSelector: []

  tolerations: []

  affinity: []

  # -- define a liveness probe that checks every 5 seconds, starting after 5 seconds
  livenessProbe:
    httpGet:
      path: /ready
      port: 3020

  # -- define a readiness probe that checks every 5 seconds, starting after 5 seconds
  readinessProbe:
    httpGet:
      path: /ready
      port: 3020

  resources:
    # -- We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 100m
      memory: 1024Mi
    requests:
      cpu: 10m
      memory: 64Mi

  podSecurityContext:
    # -- fsGroup is the group ID associated with the container
    fsGroup: 1000

  # -- Security Context policies for controller pods
  # See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
  # notes on enabling and using sysctls
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    # runAsUser is the user ID used to run the container
    runAsUser: 1000
    # runAsGroup is the primary group ID used to run all processes within any container of the pod
    runAsGroup: 1000
    # readOnlyRootFilesystem is a flag to enable readOnlyRootFilesystem for the Hazelcast security context
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

service:
  type: ClusterIP
  ports:
    - name: http
      port: 3020
      targetPort: 3020
      protocol: TCP
      public: true

secret:
  enabled: false

# Prometheus Operator ServiceMonitor configuration
monitoring:
  # -- Creates a Prometheus Operator ServiceMonitor
  enabled: true
  # -- Additional labels that can be used so PodMonitor will be discovered by Prometheus
  labels:
    release: prometheus-operator
  # -- The label to use to retrieve the job name from.
  jobLabel: ""
