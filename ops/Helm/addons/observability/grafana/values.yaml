# Common default values for grafana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Docs: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
grafana:
  enabled: true
  namespaceOverride: ""

  podAnnotations:
    "pyroscope.grafana.com/scrape": "true"
    "pyroscope.grafana.com/port": "6060"

  testFramework:
    enabled: false

  # TODO: disable after fix https://github.com/grafana/helm-charts/issues/2899
  assertNoLeakedSecrets: false

  # Deploy default dashboards.
  ##
  defaultDashboardsEnabled: true

  # adminPassword: shortlink

  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  persistence:
    enabled: true
    storageClassName: local-path
    inMemory:
      enabled: true

  revisionHistoryLimit: 2

  serviceMonitor:
    enabled: true
    selfMonitor: true
    interval: "1m"

    labels:
      release: prometheus-operator

  imageRenderer:
    enabled: true

    revisionHistoryLimit: 2

    securityContext:
      runAsNonRoot: true
      runAsUser: 472
      runAsGroup: 472
      fsGroup: 472

    serviceMonitor:
      enabled: true
      selfMonitor: true
      interval: "1m"

    resources:
      limits:
        cpu: 300m
        memory: 256Mi
      requests:
        cpu: 25m
        memory: 64Mi

  route:
    main:
      enabled: true

      hostnames:
        - grafana.shortlink.best

  ingress:
    enabled: true

    annotations:
      cert-manager.io/cluster-issuer: cert-manager-production
      nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
      nginx.ingress.kubernetes.io/enable-opentelemetry: "true"

    hosts:
      - grafana.shortlink.best

    path: /

    tls:
      - secretName: grafana-ingress-tls
        hosts:
          - grafana.shortlink.best

  env:
    GF_FEATURE_TOGGLES_ENABLE: flameGraph,traceToProfiles,accessControlOnCall
    GF_DIAGNOSTICS_PROFILING_ENABLED: true
    GF_DIAGNOSTICS_PROFILING_ADDR: 0.0.0.0
    GF_DIAGNOSTICS_PROFILING_PORT: 6060

  sidecar:
    alerts:
      enabled: true
      searchNamespace: ALL
    dashboards:
      enabled: true
      defaultFolderName: "General"
      searchNamespace: ALL
      folder: /tmp/dashboards
      folderAnnotation: grafana_dashboard_folder
      provider:
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      searchNamespace: ALL
    plugins:
      enabled: true
      searchNamespace: ALL
      skipReload: true
      initPlugins: true
    notifiers:
      enabled: true
      searchNamespace: ALL
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi

  plugins:
    - grafana-polystat-panel
    - grafana-oncall-app
    - hamedkarbasi93-kafka-datasource
    - grafana-pyroscope-app

  extraInitContainers:
    - name: plugin-init
      image: quay.io/curl/curl:latest
      command: [ "sh", "-c" ]
      args:
        - |
          # Get pluginName zip
          curl -L \
          -H "Accept: application/octet-stream" \
          -o /tmp/grafana-lokiexplore-app-latest.zip \
          https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip --insecure

          # Unzip pluginName where grafana read plugins
          unzip /tmp/grafana-lokiexplore-app-latest.zip -d /var/lib/grafana/plugins

      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 25m
          memory: 64Mi

      volumeMounts:
        - name: grafana-plugins
          mountPath: /var/lib/grafana/plugins

  extraContainerVolumes:
    - name: grafana-plugins
      emptyDir: {}

  extraVolumeMounts:
    - name: grafana-plugins
      mountPath: /var/lib/grafana/plugins

  downloadDashboards:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi

  initChownData:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 64Mi

  grafana.ini:
    reporting:
      enabled: true

    auth:
      anonymous:
        enabled: true

        # Organization name that should be used for unauthenticated users
        org_name: "Main Org."

        # Role for unauthenticated users, other valid values are `Editor` and `Admin`
        org_role: Viewer

        # Hide the Grafana version text from the footer and help tooltip for unauthenticated users (default: false)
        hide_version: true
