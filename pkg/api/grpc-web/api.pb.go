// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: pkg/api/grpc-web/api.proto

package grpcweb

import (
	context "context"
	link "github.com/batazor/shortlink/pkg/link"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_pkg_api_grpc_web_api_proto protoreflect.FileDescriptor

var file_pkg_api_grpc_web_api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x77,
	0x65, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72,
	0x70, 0x63, 0x77, 0x65, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xf1, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x37,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x0a, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x0b, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x0a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x0a,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7b, 0x68, 0x61, 0x73, 0x68, 0x7d, 0x12,
	0x35, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0a, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x0a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x22, 0x04, 0x2f,
	0x61, 0x70, 0x69, 0x3a, 0x01, 0x2a, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09,
	0x2a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x3a, 0x01, 0x2a, 0x42, 0x09, 0x5a, 0x07, 0x67, 0x72, 0x70,
	0x63, 0x77, 0x65, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_pkg_api_grpc_web_api_proto_goTypes = []interface{}{
	(*link.Link)(nil),   // 0: link.Link
	(*link.Links)(nil),  // 1: link.Links
	(*empty.Empty)(nil), // 2: google.protobuf.Empty
}
var file_pkg_api_grpc_web_api_proto_depIdxs = []int32{
	0, // 0: grpcweb.Link.GetLinks:input_type -> link.Link
	0, // 1: grpcweb.Link.GetLink:input_type -> link.Link
	0, // 2: grpcweb.Link.CreateLink:input_type -> link.Link
	0, // 3: grpcweb.Link.DeleteLink:input_type -> link.Link
	1, // 4: grpcweb.Link.GetLinks:output_type -> link.Links
	0, // 5: grpcweb.Link.GetLink:output_type -> link.Link
	0, // 6: grpcweb.Link.CreateLink:output_type -> link.Link
	2, // 7: grpcweb.Link.DeleteLink:output_type -> google.protobuf.Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_api_grpc_web_api_proto_init() }
func file_pkg_api_grpc_web_api_proto_init() {
	if File_pkg_api_grpc_web_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_grpc_web_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_api_grpc_web_api_proto_goTypes,
		DependencyIndexes: file_pkg_api_grpc_web_api_proto_depIdxs,
	}.Build()
	File_pkg_api_grpc_web_api_proto = out.File
	file_pkg_api_grpc_web_api_proto_rawDesc = nil
	file_pkg_api_grpc_web_api_proto_goTypes = nil
	file_pkg_api_grpc_web_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkClient is the client API for Link service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkClient interface {
	GetLinks(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Links, error)
	GetLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Link, error)
	CreateLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Link, error)
	DeleteLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*empty.Empty, error)
}

type linkClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkClient(cc grpc.ClientConnInterface) LinkClient {
	return &linkClient{cc}
}

func (c *linkClient) GetLinks(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Links, error) {
	out := new(link.Links)
	err := c.cc.Invoke(ctx, "/grpcweb.Link/GetLinks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkClient) GetLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Link, error) {
	out := new(link.Link)
	err := c.cc.Invoke(ctx, "/grpcweb.Link/GetLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkClient) CreateLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*link.Link, error) {
	out := new(link.Link)
	err := c.cc.Invoke(ctx, "/grpcweb.Link/CreateLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkClient) DeleteLink(ctx context.Context, in *link.Link, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpcweb.Link/DeleteLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinkServer is the server API for Link service.
type LinkServer interface {
	GetLinks(context.Context, *link.Link) (*link.Links, error)
	GetLink(context.Context, *link.Link) (*link.Link, error)
	CreateLink(context.Context, *link.Link) (*link.Link, error)
	DeleteLink(context.Context, *link.Link) (*empty.Empty, error)
}

// UnimplementedLinkServer can be embedded to have forward compatible implementations.
type UnimplementedLinkServer struct {
}

func (*UnimplementedLinkServer) GetLinks(context.Context, *link.Link) (*link.Links, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLinks not implemented")
}
func (*UnimplementedLinkServer) GetLink(context.Context, *link.Link) (*link.Link, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLink not implemented")
}
func (*UnimplementedLinkServer) CreateLink(context.Context, *link.Link) (*link.Link, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLink not implemented")
}
func (*UnimplementedLinkServer) DeleteLink(context.Context, *link.Link) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLink not implemented")
}

func RegisterLinkServer(s *grpc.Server, srv LinkServer) {
	s.RegisterService(&_Link_serviceDesc, srv)
}

func _Link_GetLinks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(link.Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkServer).GetLinks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcweb.Link/GetLinks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkServer).GetLinks(ctx, req.(*link.Link))
	}
	return interceptor(ctx, in, info, handler)
}

func _Link_GetLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(link.Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkServer).GetLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcweb.Link/GetLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkServer).GetLink(ctx, req.(*link.Link))
	}
	return interceptor(ctx, in, info, handler)
}

func _Link_CreateLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(link.Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkServer).CreateLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcweb.Link/CreateLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkServer).CreateLink(ctx, req.(*link.Link))
	}
	return interceptor(ctx, in, info, handler)
}

func _Link_DeleteLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(link.Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkServer).DeleteLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcweb.Link/DeleteLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkServer).DeleteLink(ctx, req.(*link.Link))
	}
	return interceptor(ctx, in, info, handler)
}

var _Link_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcweb.Link",
	HandlerType: (*LinkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLinks",
			Handler:    _Link_GetLinks_Handler,
		},
		{
			MethodName: "GetLink",
			Handler:    _Link_GetLink_Handler,
		},
		{
			MethodName: "CreateLink",
			Handler:    _Link_CreateLink_Handler,
		},
		{
			MethodName: "DeleteLink",
			Handler:    _Link_DeleteLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/grpc-web/api.proto",
}
