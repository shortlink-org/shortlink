env:
  browser: true
  node: true
  es2021: true
extends:
  - airbnb
  - airbnb/hooks
  - plugin:react/recommended
  - plugin:react-hooks/recommended
  - plugin:react/jsx-runtime
  - plugin:import/warnings
  - plugin:@next/next/recommended
  - plugin:storybook/recommended
  - plugin:jsx-a11y/recommended
  - plugin:import/recommended
  - prettier
plugins:
  - react
  - react-hooks
  - prettier
  - storybook
  - import
  - jsx-a11y
  - shortlink
  - '@nx'
settings:
  react:
    version: 'detect'
  import/resolver:
    node: true
    typescript: true
rules:
  semi: ['error', 'never']
  comma-style: ['error', 'last']
  comma-dangle: ['error', 'always-multiline']
  react/jsx-filename-extension: [1, { extensions: ['.ts', '.tsx'] }]
  import/extensions: off
  import/default: off
  no-alert: off
  consistent-return: off
  import/no-extraneous-dependencies: off
  import/prefer-default-export: off
  import/order:
    [
      'warn',
      {
        'newlines-between': 'always',
        pathGroups: [{ pattern: '$/**', group: 'internal' }, { pattern: '@mui/icons-material/**', group: 'external' }],
        pathGroupsExcludedImportTypes: ['builtin', 'external'],
        groups: [['builtin', 'external'], ['internal'], ['parent', 'sibling', 'index'], 'unknown'],
      },
    ]
  no-underscore-dangle: off
  no-console: ['warn', { allow: ['info', 'warn', 'error'] }]
  no-debugger: error
  object-shorthand: error
  default-param-last: off
  import/no-self-import: off
  jsx-a11y/click-events-have-key-events: off
  jsx-a11y/no-static-element-interactions: off
  import/no-unresolved: off
  import/no-duplicates: off
  import/export: off
  import/no-named-as-default: off
  import/no-named-as-default-member: off
  import/no-useless-path-segments: off
  import/no-relative-packages: off
  react/require-default-props: off
  react/destructuring-assignment: off
  react/no-array-index-key: off
  react/prop-types: off
  prettier/prettier: warn
  import/no-cycle: [0, { ignoreExternal: true }]
  react/no-unescaped-entities: off
  react/jsx-props-no-spreading: off
  react/function-component-definition: off
  jsx-a11y/anchor-is-valid: off
  # needed because of https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use & https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined
  no-use-before-define: off
  'jsx-a11y/label-has-associated-control': off
  react/react-in-jsx-scope: off
  '@next/next/no-img-element': off
  react/no-unused-prop-types: off
  no-restricted-globals: off
  no-unused-expressions: off
  react/jsx-no-constructed-context-values: off
  react/display-name: off
  '@next/next/no-html-link-for-pages': off
  import/no-default-export: error
  '@typescript-eslint/no-redundant-type-constituents': off
overrides:
  - files:
      - '*.ts'
      - '*.tsx'
    extends:
      - plugin:@typescript-eslint/recommended
      - plugin:@typescript-eslint/eslint-recommended
      - plugin:@typescript-eslint/recommended-requiring-type-checking
      - plugin:import/typescript
    parserOptions:
      project: true
    #        - tsconfig.json
    #        - cypress/tsconfig.json
    plugins:
      - '@typescript-eslint'
    rules:
      '@typescript-eslint/no-unused-vars': off
      '@typescript-eslint/ban-ts-comment': off
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/no-empty-function': off
      '@typescript-eslint/no-unsafe-call': off
      '@typescript-eslint/no-unsafe-member-access': off
      '@typescript-eslint/no-unsafe-assignment': off
      '@typescript-eslint/no-unsafe-return': off
      '@typescript-eslint/no-floating-promises': off
      '@typescript-eslint/no-unsafe-argument': off
      '@typescript-eslint/no-misused-promises': off
      '@typescript-eslint/require-await': off
      '@typescript-eslint/restrict-template-expressions': off
      '@typescript-eslint/no-implied-eval': off
      '@typescript-eslint/unbound-method': off
      '@typescript-eslint/no-unnecessary-type-assertion': off
      '@typescript-eslint/no-unsafe-enum-comparison': off
      '@typescript-eslint/restrict-plus-operands': off
      '@typescript-eslint/no-base-to-string': off
      '@typescript-eslint/camelcase': off
      import/no-default-export: off
  - files:
      - '**/__tests__/**'
      - '**/__mocks__/**'
    env:
      jest: true
    extends:
      - plugin:testing-library/react
      - plugin:jest-dom/recommended
    rules:
      testing-library/no-render-in-setup: error
      testing-library/no-wait-for-empty-callback: error
      testing-library/prefer-explicit-assert: error
      testing-library/prefer-presence-queries: error
      testing-library/prefer-screen-queries: error
      testing-library/prefer-wait-for: error
  - files:
      - '**/__mocks__/**'
    rules:
      import/no-anonymous-default-export: off
      import/no-default-export: off
  - files:
      - '**/cypress/**'
    extends:
      - plugin:cypress/recommended
    env:
      'cypress/globals': true
